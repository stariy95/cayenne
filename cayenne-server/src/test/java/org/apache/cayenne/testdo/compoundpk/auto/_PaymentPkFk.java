/*****************************************************************
 *   Licensed to the Apache Software Foundation (ASF) under one
 *  or more contributor license agreements.  See the NOTICE file
 *  distributed with this work for additional information
 *  regarding copyright ownership.  The ASF licenses this file
 *  to you under the Apache License, Version 2.0 (the
 *  "License"); you may not use this file except in compliance
 *  with the License.  You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an
 *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *  KIND, either express or implied.  See the License for the
 *  specific language governing permissions and limitations
 *  under the License.
 ****************************************************************/

package org.apache.cayenne.testdo.compoundpk.auto;

import java.math.BigDecimal;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;
import org.apache.cayenne.testdo.compoundpk.OrderPkFk;

/**
 * Class _PaymentPkFk was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _PaymentPkFk extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ORDER_NUMBER_PK_COLUMN = "order_number";
    public static final String PAYMENT_NUMBER_PK_COLUMN = "payment_number";

    public static final Property<BigDecimal> AMOUNT = Property.create("amount", BigDecimal.class);
    public static final Property<Integer> ORDER_NUMBER = Property.create("orderNumber", Integer.class);
    public static final Property<Integer> PAYMENT_NUMBER = Property.create("paymentNumber", Integer.class);
    public static final Property<OrderPkFk> ORDER = Property.create("order", OrderPkFk.class);

    public void setAmount(BigDecimal amount) {
        writeProperty("amount", amount);
    }
    public BigDecimal getAmount() {
        return (BigDecimal)readProperty("amount");
    }

    public void setOrderNumber(Integer orderNumber) {
        writeProperty("orderNumber", orderNumber);
    }
    public Integer getOrderNumber() {
        return (Integer)readProperty("orderNumber");
    }

    public void setPaymentNumber(Integer paymentNumber) {
        writeProperty("paymentNumber", paymentNumber);
    }
    public Integer getPaymentNumber() {
        return (Integer)readProperty("paymentNumber");
    }

    public void setOrder(OrderPkFk order) {
        setToOneTarget("order", order, true);
    }

    public OrderPkFk getOrder() {
        return (OrderPkFk)readProperty("order");
    }


}
